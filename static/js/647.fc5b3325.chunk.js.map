{"version":3,"file":"static/js/647.fc5b3325.chunk.js","mappings":"4LACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,SCahL,EATmB,SAACA,GAChB,OACI,gBAAKC,UAAS,UAAKC,EAAAA,OAAc,YAAIA,EAAAA,QAAiB,UAClD,SAAC,KAAO,CAACC,GAAE,mBAAcH,EAAMI,IAAK,SAAEJ,EAAMK,QAGxD,ECAA,EANgB,SAACL,GACb,OACI,gBAAKC,UAAWC,EAAAA,QAAgB,SAAEF,EAAMM,SAEhD,E,8BCDA,EAN6BC,EAAAA,KAAaC,MAAM,CAC5CC,YAAaF,EAAAA,KACRG,IAAI,EAAG,oCACPC,IAAI,IAAK,uCACTC,SAAS,cC+BZC,EAAiB,SAACb,GAOpB,OACI,4BACI,yCACA,SAAC,KAAM,CACHc,cAAe,CAACC,eAAgB,IAChCC,SAAU,SAAAC,GACN,IAAMC,EAAS,CAAC,EAIhB,OAHKD,EAAOF,iBACRG,EAAOH,eAAiB,YAErBG,CACX,EACAC,SAAU,SAACF,IAjBD,SAACA,GACnBG,QAAQC,IAAIrB,EAAMsB,aAClBtB,EAAMsB,YAAYL,EAAOF,eAC7B,CAegBQ,CAAcN,EAClB,EACAO,iBAAkBC,EAAqB,SACtC,kBACG,UAAC,KAAI,YACD,0BACI,SAAC,KAAK,CAACC,KAAM,OAAQrB,KAAM,iBAAkBsB,YAAa,sBAE9D,SAAC,KAAY,CAACtB,KAAK,iBAAiBuB,UAAU,SAE9C,mBAAQF,KAAM,SAAS,oBACpB,MAK3B,EAEA,EAjEgB,SAAC1B,GAEb,IAAM6B,EAAQ7B,EAAM8B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAU,CAAC7B,KAAM6B,EAAE7B,KAAMD,GAAI8B,EAAE9B,IAAM,IAC9E+B,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAO,CAAC/B,QAAS+B,EAAE/B,SAAW,IACxDuB,EAAMd,eAE7B,OAAIf,EAAMsC,QAGN,iBAAKrC,UAAWC,EAAAA,QAAgB,WAC5B,gBAAKD,UAAWC,EAAAA,aAAqB,SAC/B6B,KAEN,iBAAK9B,UAAWC,EAAAA,SAAiB,WAC7B,yBACMiC,KAEN,0BACG,SAACtB,GAAc,UAAKb,aAZV,SAAC,KAAQ,CAACG,GAAI,UAiB3C,E,oBCVA,GAAeoC,E,QAAAA,KACXC,EAAAA,EAAAA,KAhBoB,SAACX,GACrB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAE2B,SAACW,GACxB,MAAO,CAEHnB,YAAa,SAACP,GACV0B,GAASC,EAAAA,EAAAA,GAAmB3B,GAChC,EAER,IAII4B,EAAAA,EAFJ,CAGKC,E","sources":["webpack://social/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/FormValidation/AddMessageFormSchema.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nimport classes from '.././Dialogs.module.css';\n\nconst DialogItem = (props) => {\n    return (\n        <div className={`${classes.dialog} ${classes.active}`}>\n            <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;","import React from \"react\";\n\nimport classes from '.././Dialogs.module.css';\n\n\nconst Message = (props) => {\n    return (\n        <div className={classes.message}>{props.message}</div>\n    )\n}\n\nexport default Message;","import * as Yup from \"yup\";\n\nconst AddMessageFormSchema = Yup.object().shape({\n    newPostText: Yup.string()\n        .min(5, \"Must be longer than 5 characters\")\n        .max(300, \"Must be shorter than 300 characters\")\n        .required(\"Required\"),\n});\nexport default AddMessageFormSchema;\n","import React from \"react\";\nimport { Navigate, NavLink } from 'react-router-dom';\nimport DialogItem from './DialogItem/DialogItem'\nimport Message from \"./Message/Message\";\nimport classes from './Dialogs.module.css';\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../redux/dialogsReducer\";\nimport {Formik, Form, Field, ErrorMessage} from \"formik\";\nimport addMessageFormSchema from \"../FormValidation/AddMessageFormSchema\";\n\n\nconst Dialogs = (props) => {\n\n    const state = props.dialogsPage;\n\n    const dialogsElement = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\n    const messagesElement = state.messages.map(m => <Message message={m.message} />);\n    const newMessageBody = state.newMessageBody;\n\n    if(!props.isAuth) return <Navigate to={'/login'} />\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n                { dialogsElement }\n            </div>\n            <div className={classes.messages}>\n                <div>\n                    { messagesElement }\n                </div>\n                <div>\n                   <AddMessageForm {...props}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst AddMessageForm = (props) => {\n\n    const addNewMessage = (values) => {\n        console.log(props.sendMessage)\n        props.sendMessage(values.newMessageBody)\n    }\n    \n    return (\n        <div>\n            <h1>Add Message</h1>\n            <Formik\n                initialValues={{newMessageBody: \"\"}}\n                validate={values => {\n                    const errors = {};\n                    if (!values.newMessageBody) {\n                        errors.newMessageBody = 'Required';\n                    } \n                    return errors;\n                }}\n                onSubmit={(values) => {\n                    addNewMessage(values)\n                }}\n                validationSchema={addMessageFormSchema}>\n                {() => (\n                    <Form>\n                        <div>\n                            <Field type={'text'} name={'newMessageBody'} placeholder={'add message...'}/>\n                        </div>\n                        <ErrorMessage name=\"newMessageBody\" component=\"div\"/>\n\n                        <button type={'submit'}>Send</button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n}\n\nexport default Dialogs;","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from 'react-redux'\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../redux/dialogsReducer\";\nimport { Navigate } from \"react-router-dom\";\nimport { WithAuthRedirect } from \"../../hoc/WithAuthRedirect\";\nimport { compose } from \"redux\";\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    WithAuthRedirect)\n    (Dialogs)\n"],"names":["props","className","classes","to","id","name","message","Yup","shape","newPostText","min","max","required","AddMessageForm","initialValues","newMessageBody","validate","values","errors","onSubmit","console","log","sendMessage","addNewMessage","validationSchema","addMessageFormSchema","type","placeholder","component","state","dialogsPage","dialogsElement","dialogs","map","d","messagesElement","messages","m","isAuth","compose","connect","dispatch","sendMessageCreator","WithAuthRedirect","Dialogs"],"sourceRoot":""}