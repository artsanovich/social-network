{"version":3,"file":"static/js/659.6187826b.chunk.js","mappings":"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","sources":["webpack://social/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://social/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?c3a9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusÐ¡lass.tsx","components/FormValidation/ProfileDataFormSchema.ts","webpack://social/./src/components/Profile/ProfileInfo/ProfileDataForm.module.css?5c5c","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://social/./src/components/Profile/MyProsts/Post/MyPosts.module.css?f202","webpack://social/./src/components/Profile/MyProsts/Post/Post.module.css?5936","components/Profile/MyProsts/Post/Post.tsx","components/FormValidation/AddNewPostFormSchema.ts","components/Profile/MyProsts/Post/MyPosts.tsx","components/Profile/MyProsts/Post/MyPostsContainer.tsx","webpack://social/./src/components/Profile/Profile.module.css?b512","components/Profile/Profile.tsx","components/Profile/ProfileContainer.js","hoc/WithRouter.js","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"ownerImageBlock\":\"ProfileInfo_ownerImageBlock__HWN6P\",\"userImageBlock\":\"ProfileInfo_userImageBlock__sA4Yk\",\"mainPhoto\":\"ProfileInfo_mainPhoto__QU8TO\",\"fileUploadButton\":\"ProfileInfo_fileUploadButton__3oibu\",\"imageBlock\":\"ProfileInfo_imageBlock__8p3Ta\",\"infoBlock\":\"ProfileInfo_infoBlock__mZ2kj\",\"infoElement\":\"ProfileInfo_infoElement__u9sc-\",\"contact\":\"ProfileInfo_contact__sQB8W\",\"fileUploadLabel\":\"ProfileInfo_fileUploadLabel__l5nfU\",\"fileUploadInput\":\"ProfileInfo_fileUploadInput__dw28P\"};","// extracted by mini-css-extract-plugin\nexport default {\"statusBlock\":\"ProfileStatus_statusBlock__bfH6I\"};","import React, { ChangeEvent } from 'react'\nimport classes from './ProfileStatus.module.css'\n\ntype PropsType = {\n  statusText: string\n  isOwner: boolean\n  updateStatusText: (newStatusText: string) => void\n}\n\ntype StateType = {\n  editMode: boolean,\n  statusText: string,\n}\n\nclass ProfileStatus extends React.Component<PropsType, StateType> {\n\n  state = {\n    editMode: false,\n    statusText: this.props.statusText\n  }\n\n  activateEditMode = () => {\n    if (this.props.isOwner) {\n    this.setState({\n      editMode: true,\n      statusText: this.props.statusText\n    })\n  }\n  }\n\n  deactivateEditMode = () => {\n      this.setState({\n        editMode: false\n      })\n      this.props.updateStatusText(this.state.statusText)\n  }\n\n  onStatusTextChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      statusText: e.currentTarget.value\n    }) \n  }\n\n  componentDidUpdate(prevProps: PropsType, prevState: StateType) {\n    if(prevProps.statusText !== this.props.statusText) {\n      this.setState({\n        statusText: this.props.statusText\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className={classes.statusBlock}>\n        {!this.state.editMode &&\n        <div onClick={this.activateEditMode}>\n          <span className={classes.statusTitle}><b>Status: </b></span>\n          <span className={classes.statusText}>{this.props.statusText || \"no status\"}</span>\n        </div>\n        }\n        {this.state.editMode && \n        <div className={classes.statusBlock}>\n          <input onChange={this.onStatusTextChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.statusText} />\n        </div>\n        } \n      </div>\n    )\n  }\n}\n\nexport default ProfileStatus;","import * as Yup from \"yup\";\n\nconst UrlValidateSchema = /^((https?|ftp):\\/\\/)?(www.)?(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i\nconst UrlValidateError = 'Enter correct url!'\n\nconst ProfileDataFormSchema = Yup.object().shape({\n    fullName: Yup.string()\n        .max(15, \"max 15 symbols\"),\n    lookingForAJobDescription: Yup.string()\n        .max(300, \"max 300 symbols\"),\n    aboutMe: Yup.string()\n        .max(300, \"max 300 symbols\"),\n    contacts: Yup.object().shape({\n        facebook: Yup.string().matches(UrlValidateSchema, UrlValidateError).nullable(),\n        github: Yup.string().matches(UrlValidateSchema, UrlValidateError).nullable(),\n        instagram: Yup.string().matches(UrlValidateSchema, UrlValidateError).nullable(),\n        mainLink: Yup.string().matches(UrlValidateSchema, UrlValidateError).nullable(),\n        twitter: Yup.string().matches(UrlValidateSchema, UrlValidateError).nullable(),\n        vk: Yup.string().matches(UrlValidateSchema, UrlValidateError).nullable(),\n        website: Yup.string().matches(UrlValidateSchema, UrlValidateError).nullable(),\n        youtube: Yup.string().matches(UrlValidateSchema, UrlValidateError).nullable()\n    })\n});\nexport default ProfileDataFormSchema;\n","// extracted by mini-css-extract-plugin\nexport default {\"submitButton\":\"ProfileDataForm_submitButton__Qoy7i\"};","import {Formik, FormikProps, Form, Field, ErrorMessage} from \"formik\";\nimport { FC } from \"react\";\nimport { ProfileType } from \"../../../types/Types\";\nimport ProfileDataFormSchema from \"../../FormValidation/ProfileDataFormSchema\";\nimport classes from './ProfileDataForm.module.css'\n\ntype FormProps = {\n    profile: ProfileType,\n    onSubmit: (values: ProfileType) => void\n}\n\n\nconst ProfileDataForm: FC<FormProps> = ({profile, onSubmit}: FormProps) => {\n    return (\n    <Formik\n        initialValues={profile}\n        onSubmit={(values) => {\n            onSubmit(values)\n        }}\n        validationSchema={ProfileDataFormSchema}>\n        {() => (\n            <Form>\n                <div>\n                    <b>Full name: </b> \n                    <Field type={'text'} name={'fullName'} placeholder={'add name...'}/>\n                    <ErrorMessage name=\"fullName\" component=\"span\"/>\n                </div>\n                <div>\n                    <b>Looking for a job: </b> \n                    <Field type={'checkbox'} name={'lookingForAJob'}/>\n                </div>\n                <div>\n                    <b>My profesional skills: </b> \n                    <Field type={'textarea'} name={'lookingForAJobDescription'} placeholder={'add skills...'}/>\n                    <ErrorMessage name=\"lookingForAJobDescription\" component=\"span\"/>\n                </div>\n                <div>\n                    <b>About me: </b> \n                    <Field type={'textarea'} name={'aboutMe'} placeholder={'add smth about...'}/>\n                    <ErrorMessage name=\"aboutMe\" component=\"span\"/>\n                </div>\n                <div><b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n                    return (\n                        <div className={classes.contact}>\n                            <b>{key}: </b>\n                            <Field type={'text'} name={`contacts.${key}`} placeholder={key}/>\n                            <ErrorMessage name={`contacts.${key}`} component=\"span\"/>\n                        </div>\n                    )\n                    })}\n                </div>\n                <button className={classes.submitButton} type={'submit'}>Save</button>\n            </Form>\n          )}\n    </Formik>\n    )\n  }\n\n  export default ProfileDataForm","import Preloader from '../../common/Preloader/Preloader';\nimport classes from './ProfileInfo.module.css'\nimport '../../../App.css'\n\nimport ProfileStatus from './ProfileStatus/ProfileStatusÐ¡lass';\nimport userPhoto from '../../../assets/images/user-icon.png'\nimport { useState, ChangeEvent } from 'react';\nimport ProfileDataForm from './ProfileDataForm';\nimport { ContactsType, ProfileType } from '../../../types/Types';\nimport { Button } from 'antd';\n\ntype PropsType = {\n  profile: ProfileType\n  statusText: string,\n  updateStatusText: (statusText: string) => void\n  isOwner: boolean\n  savePhoto: (file: File) => void\n  saveProfile: (profile: ProfileType) => Promise<any>\n}\n\nconst ProfileInfo = (props: PropsType) => {\n\n    const [editMode, setEditMode] = useState(false)\n\n    if (!props.profile) {\n\n      return <Preloader />\n    }\n\n    const mainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\n      if(e.target.files?.length) {\n        props.savePhoto(e.target.files[0])\n      }\n    }\n    \n    const onSubmit = (formData: ProfileType) => {\n      props.saveProfile(formData)\n      setEditMode(false)\n    }\n\n    return (\n      <div>\n        <div className={classes.descriptionBlock}>\n          <div className={props.isOwner ? classes.ownerImageBlock : classes.userImageBlock}>\n            <img src={props.profile.photos.large || userPhoto} className={classes.mainPhoto} alt=\"\" />\n            {props.isOwner && \n              <Button className={classes.fileUploadButton}>\n                <label className={classes.fileUploadLabel}>\n                  Choose File\n                  <input type={'file'} onChange={mainPhotoSelected} className={classes.fileUploadInput}></input>\n                </label>\n              </Button>}\n          </div>\n          <ProfileStatus statusText={props.statusText} updateStatusText={props.updateStatusText} isOwner={props.isOwner}/>\n          {editMode ? <ProfileDataForm profile={props.profile} onSubmit={onSubmit}/> \n          : <ProfileData profile={props.profile} isOwner={props.isOwner} goToEditMode={() => {setEditMode(true)}}/>}\n        </div>\n      </div>\n    )\n}\n\ntype ProfileDataPropsType = {\n  profile: ProfileType\n  isOwner: boolean\n  goToEditMode: () => void\n}\n\nconst ProfileData = ({profile, isOwner, goToEditMode}: ProfileDataPropsType) => {\n  return (\n    <div className={classes.infoBlock}>\n      <div className={classes.infoElement}><b>Full name: </b> {profile.fullName}</div>\n      <div className={classes.infoElement}><b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}</div>\n      {profile.lookingForAJob &&\n        <div className={classes.infoElement}><b>My profesional skills:</b> {profile.lookingForAJobDescription}</div>\n      }\n      <div className={classes.infoElement}><b>About me:</b> {profile.aboutMe}</div>\n      <div className={classes.infoElement}><b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n        return <Contact contactTitle={key} contactValue={profile.contacts[key as keyof ContactsType]}/>\n      })}</div>\n      {isOwner && <div><Button onClick={goToEditMode}>Edit</Button></div>}\n    </div>\n  ) \n}\n\ntype ContactsPropsType = {\n  contactTitle: string\n  contactValue: string\n}\n\nconst Contact = ({contactTitle, contactValue}: ContactsPropsType) => {\n  return <div className={classes.contact}><b>{contactTitle}:</b>{contactValue}</div>\n}\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"messageForm\":\"MyPosts_messageForm__CwdnH\",\"postsTitle\":\"MyPosts_postsTitle__JWGQD\",\"messageTitle\":\"MyPosts_messageTitle__Vzghl\",\"messageInput\":\"MyPosts_messageInput__gsYZu\",\"messageSubmit\":\"MyPosts_messageSubmit__MsdTi\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__c7nSS\",\"itemText\":\"Post_itemText__i2gCK\"};","import classes from './Post.module.css'\nimport { Avatar } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\ntype PropsType = {\n  message: string\n  likesCount: number\n}\n\nconst Post = (props: PropsType) => {\n  return (\n    <div className={classes.item}>\n        <Avatar style={{backgroundColor: '#87d068'}} icon={<UserOutlined />} />\n        <div className={classes.itemText}>{props.message}</div>\n    </div>\n  )\n}\n\nexport default Post;","import * as Yup from \"yup\";\n\nconst AddNewPostFormSchema = Yup.object().shape({\n    newPostText: Yup.string()\n        .min(10, \"Must be longer than 10 characters\")\n        .max(600, \"Must be shorter than 600 characters\")\n        .required(\"Required\"),\n});\nexport default AddNewPostFormSchema;\n","import React from 'react';\nimport classes from './MyPosts.module.css'\nimport Post from './Post';\nimport {Formik, Form, Field, ErrorMessage, FormikErrors} from \"formik\";\nimport addNewPostFormSchema from \"../../../FormValidation/AddNewPostFormSchema\";\nimport { MyPostsPropsFromConnect } from './MyPostsContainer';\n\n\nconst MyPosts = (props: MyPostsPropsFromConnect) => {\n\n  const postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />);\n  \n  return (\n    <div className={classes.postsBlock}>\n      <h3 className={classes.postsTitle}>My Posts</h3>\n      <div>\n        <AddNewPostForm {...props} />\n      </div>\n      <div className={classes.posts}>\n        { postsElements }\n      </div>\n    </div>\n  )\n}\n\nconst AddNewPostForm = (props: MyPostsPropsFromConnect) => {\n\n  type FormValues = {\n    newPostText: string\n  }\n\n  let initialValues: FormValues = {\n    newPostText: \"\"\n  }\n\n  const onAddPost = (values: FormValues) => {\n    props.addPost(values.newPostText);\n  }\n  \n  return (\n      <div className={classes.messageForm}>\n          <h1 className={classes.messageTitle}>Add Message</h1>\n          <Formik\n              initialValues={initialValues}\n              validate={values => {\n                  const errors: FormikErrors<FormValues> = {};\n                  if (!values.newPostText) {\n                      errors.newPostText = 'Required';\n                  } \n                  return errors;\n              }}\n              onSubmit={(values) => {\n                onAddPost(values)\n                values.newPostText = ''\n              }}\n              validationSchema={addNewPostFormSchema}>\n              {() => (\n                  <Form>\n                      <div className={classes.messageInput}>\n                          <Field type={'text'} name={'newPostText'} placeholder={'add post...'}/>\n                      </div>\n                      <ErrorMessage name=\"newPostText\" component=\"div\"/>\n\n                      <button className={classes.messageSubmit} type={'submit'}>Send</button>\n                  </Form>\n              )}\n          </Formik>\n      </div>\n  );\n}\n\n\nexport default MyPosts;","import React from 'react';\nimport { actions } from '../../../../redux/profileReducer';\nimport MyPosts from './MyPosts';\nimport {connect, ConnectedProps} from 'react-redux'\nimport { AppDispatch, AppStateType } from '../../../../redux/reduxStore';\n\n\nconst mapStateToProps = (state: AppStateType) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => {\n  return {\n    addPost: (newPostText: string) => {\n      dispatch(actions.addPostCreator(newPostText));\n    }\n  }\n}\n\nexport type MyPostsPropsFromConnect = ConnectedProps<typeof MyPostConnector>\n\nconst MyPostConnector = connect(mapStateToProps, mapDispatchToProps)\n\nexport default MyPostConnector(MyPosts);","// extracted by mini-css-extract-plugin\nexport default {\"profileWrapper\":\"Profile_profileWrapper__snMVu\",\"profileInfoWrapper\":\"Profile_profileInfoWrapper__htKeP\"};","import ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyProsts/Post/MyPostsContainer';\nimport { ProfileType } from '../../types/Types';\nimport classes from './Profile.module.css'\n\ntype PropsType = {\n  profile: ProfileType\n  statusText: string\n  updateStatusText: (statusText: string) => void\n  isOwner: boolean\n  savePhoto: (file: File) => void\n  saveProfile: (profile: ProfileType) => Promise<any>\n}\n\nconst Profile = (props: PropsType) => {\n    return (\n      <div className={classes.profileWrapper}>\n        <div className={classes.profileInfoWrapper}>\n          <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} statusText={props.statusText} updateStatusText={props.updateStatusText}/>\n        </div>\n        {props.isOwner && \n          <div>\n            <MyPostsContainer />\n          </div>\n      }\n    </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { setUserProfileThunkCreator, getStatusTextThunkCreator, updateStatusTextThunkCreator, savePhotoThunkCreator, saveProfileThunkCreator} from '../../redux/profileReducer'\nimport {Navigate, useLocation, useNavigate, useParams} from 'react-router-dom'\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\nimport { AppStateType } from '../../redux/reduxStore';\nimport { RouteComponentProps } from 'react-router';\nimport { ProfileType } from '../../types/Types';\nimport { withRouter } from '../../hoc/WithRouter';\n\nclass ProfileContainer extends React.Component {\n\ncomponentDidMount() {\n  this.refreshProfile()\n}\n\ncomponentDidUpdate(prevProps) {\n  if (this.props.router.params.userId != prevProps.router.params.userId) {\n    this.refreshProfile()\n  }\n}\n\nrefreshProfile() {\n  let userId = this.props.router.params.userId;\n  if(!userId) {\n    userId = 27158;\n  }\n  this.props.setUserProfile(userId)\n  this.props.getStatusText(userId)\n}\n\nrender() {\n  return ( \n      <Profile \n        {...this.props} \n        profile={this.props.profile} \n        statusText={this.props.statusText} \n        updateStatusText={this.props.updateStatusText}\n        isOwner={!this.props.router.params.userId}\n        savePhoto={this.props.savePhoto}\n        saveProfile={this.props.saveProfile}\n        />      \n  )}\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  statusText: state.profilePage.statusText\n})\n\nexport default compose(\n  connect(mapStateToProps, {setUserProfile: setUserProfileThunkCreator, getStatusText: getStatusTextThunkCreator, updateStatusText: updateStatusTextThunkCreator, savePhoto: savePhotoThunkCreator, saveProfile: saveProfileThunkCreator}),\n  withRouter,\n  WithAuthRedirect)\n  (ProfileContainer)\n\n\n","import { useParams } from 'react-router-dom';\n\n\nexport function withRouter(Component) {\n    return(props) => {\n        const match = {params: useParams()}\n        return (\n            <Component\n                {...props}\n                router={match}\n            />\n        );\n    }\n  }","import React from \"react\"\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const WithAuthRedirect = (Component) => {\n    const RedirectComponent = (props) => {\n        \n            if(!props.isAuth) return <Navigate to={'/login'} />\n            return <Component {...props}/>\n    }\n\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  \n    return ConnectedAuthRedirectComponent;\n}"],"names":["ProfileStatus","state","editMode","statusText","props","activateEditMode","isOwner","setState","deactivateEditMode","updateStatusText","onStatusTextChange","e","currentTarget","value","prevProps","prevState","this","className","classes","onClick","onChange","autoFocus","onBlur","React","UrlValidateSchema","UrlValidateError","Yup","shape","fullName","max","lookingForAJobDescription","aboutMe","contacts","facebook","matches","nullable","github","instagram","mainLink","twitter","vk","website","youtube","profile","onSubmit","initialValues","values","validationSchema","ProfileDataFormSchema","type","name","placeholder","component","Object","keys","map","key","ProfileData","goToEditMode","lookingForAJob","Contact","contactTitle","contactValue","useState","setEditMode","Preloader","src","photos","large","userPhoto","alt","target","files","length","savePhoto","formData","saveProfile","style","backgroundColor","icon","UserOutlined","message","newPostText","min","required","AddNewPostForm","validate","errors","addPost","onAddPost","addNewPostFormSchema","postsElements","posts","p","likesCount","connect","profilePage","dispatch","actions","MyPosts","MyPostsContainer","ProfileContainer","refreshProfile","router","params","userId","setUserProfile","getStatusText","compose","setUserProfileThunkCreator","getStatusTextThunkCreator","updateStatusTextThunkCreator","savePhotoThunkCreator","saveProfileThunkCreator","Component","match","useParams","WithAuthRedirect","mapStateToPropsForRedirect","isAuth","auth","to"],"sourceRoot":""}